//used for accessing CryptoCompare API
global.fetch = require('node-fetch');
//used to make messages look pretty
const { Client, Attachment, RichEmbed } = require('discord.js');

//URLs for currency thumbnails
const BITCOIN_URL = "https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1024px-Bitcoin.svg.png";
const ETH_URL = "https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Ethereum_logo_2014.svg/65px-Ethereum_logo_2014.svg.png";
const ETC_URL = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Ethereum_Classic_Logo.svg/120px-Ethereum_Classic_Logo.svg.png";
const DOGE_URL = "https://upload.wikimedia.org/wikipedia/en/thumb/d/d0/Dogecoin_Logo.png/150px-Dogecoin_Logo.png";

module.exports = function (client, options) {
  //used to identify bot commands
  const Prefix = '!';
  //catch new messages in channel
  client.on('message', m => {
    //save message contents, remove extra spaces
    var msg = m;
    var content = m.content.trim();
    //gets the number of commands in a string
    var length = content.split(/[ \n]/).length;

    //if message starts with the command prefix
    if (content.toLowerCase().startsWith(Prefix.toLowerCase())){

      //gets the first part of the command (buy, sell, ping, etc)
      var command = content.substring(Prefix.length).split(/[ \n]/)[0].toLowerCase().trim();

      //used to determine what command was entered
      switch(command) {
        case 'ping':
          //list all currency in USD
          getList(msg);
          break;
        case 'pong':
          //responds to !pong with !ping, triggering the !ping response
          msg.channel.send("!ping");
          break;

        //command to purchase currency
        case 'buy':
          //if wrong number of inputs given
          if (length != 3){
            msg.reply("Error: Wrong format");
          }

          //else continue as normal
          else{
            //get name and amount of coin to buy
            var name = content.substring(Prefix.length).split(/[ \n]/)[1].toLowerCase().trim();
            var amt = content.substring(Prefix.length).split(/[ \n]/)[2].toLowerCase().trim();
            //just spits everything for back now.
            msg.channel.send("Name: " + name + "\nAmmount: " + amt);
          }

          break;

        //to do
        case: 'sell':
          break;
      }

    }
  });
}

//get a list of cryptocurrencies
function getList(msg){
  const url = 'https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ETC,DOGE&tsyms=USD';
  //fetch data from CryptoCompare API
  fetch(url)
  // Transform the data into json string
  .then((resp) => resp.json())
  .then(function(data) {
    //sends data to SendEmbed() for output
    SendEmbed(msg, data);
  })
  //if error
  .catch(function(error){
    console.log(error);
  });
}

//this function outputs currency info using Discord's RichEmbed to format the outputs
//tl;dr: Embeds look pretty
function SendEmbed(msg, data){

  //Bitcoin Embed
  const BTC_Embed = new RichEmbed()
  .setTitle("Bitcoin")
  .setColor(0x00AE86)
  .setDescription('Symbol: BTC\nPrice: $' + data.BTC.USD)
  .setThumbnail(BITCOIN_URL)
  .setTimestamp();

  //Ethereum Embed
  const ETH_Embed = new RichEmbed()
  .setTitle("Ethereum")
  .setColor(0x00AE86)
  .setDescription('\tSymbol: ETH\nPrice: $' + data.ETH.USD)
  .setThumbnail(ETH_URL)
  .setTimestamp();

  //Ethereum Classic Embed
  const ETC_Embed = new RichEmbed()
  .setTitle("Ethereum CLassic")
  .setColor(0x00AE86)
  .setDescription('Symbol: ETC\nPrice: $' + data.ETC.USD)
  .setThumbnail(ETC_URL)
  .setTimestamp();

  //All hail the Dogecoin
  const DOGE_Embed = new RichEmbed()
  .setTitle("DogeCoin")
  .setColor(0x00AE86)
  .setDescription('Symbol: DOGE\nPrice: $' + data.DOGE.USD)
  .setThumbnail(DOGE_URL)
  .setTimestamp();

  //post the embeds into the channel
  msg.channel.send(BTC_Embed);
  msg.channel.send(ETH_Embed);
  msg.channel.send(ETC_Embed);
  msg.channel.send(DOGE_Embed);
}

/*
I might use this later to make the messages look pretty
function wrap(text) {

}
*/
