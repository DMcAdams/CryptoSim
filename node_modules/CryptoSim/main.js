global.fetch = require('node-fetch');
const { Client, Attachment, RichEmbed } = require('discord.js');
//URLs for currency thumbnails
const BITCOIN_URL = "https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1024px-Bitcoin.svg.png";
const ETH_URL = "https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Ethereum_logo_2014.svg/65px-Ethereum_logo_2014.svg.png";
const ETC_URL = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Ethereum_Classic_Logo.svg/120px-Ethereum_Classic_Logo.svg.png";
const DOGE_URL = "https://upload.wikimedia.org/wikipedia/en/thumb/d/d0/Dogecoin_Logo.png/150px-Dogecoin_Logo.png";

module.exports = function (client, options) {
  //used to identify bot commands
  const Prefix = '!';
  //catch new messages in channel
  client.on('message', m => {
    //save message contents, remove trailing whitespaces
    var msg = m;
    var content = m.content.trim();
    var length = content.split(/[ \n]/).length;
    //if starts with prefix
    if (content.toLowerCase().startsWith(Prefix.toLowerCase())){
      var command = content.substring(Prefix.length).split(/[ \n]/)[0].toLowerCase().trim();

      switch(command) {
        case 'ping': //list all currency in USD
          //getList(msg);
          getList(msg);
          //console.log(list);
          break;
        case 'pong':
          msg.channel.send("!ping");
          break;
        case 'buy':
          if (length != 3){
            msg.reply("Error: Wrong format");
          }
          else{
            //get name and amount of coin to buy
            var name = content.substring(Prefix.length).split(/[ \n]/)[1].toLowerCase().trim();
            var amt = content.substring(Prefix.length).split(/[ \n]/)[2].toLowerCase().trim();
            msg.channel.send("Name: " + name + "\nAmmount: " + amt);
          }
            break;
      }

    }
  });
}
/*runs on start, gives each player a profile and starting currency
function startup(){

}
function player(id, money, btc, eth, etc){
  this.id = id;
  this.money = money
  this.btc = 0.0;
  this.eth = 0.0;
  this.etc = 0.0
}
*/
//get a list of cryptocurrencies
function getList(msg){
  const url = 'https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ETC,DOGE&tsyms=USD';
  //fetch data from CryptoCompare API
  fetch(url)
  .then((resp) => resp.json()) // Transform the data into json
  .then(function(data) {
    //var obj = JSON.parse(data)
    console.log(data);
    console.log(data.BTC.USD);
    SendEmbed(msg, data);
    //msg.reply("\nCurrency: Bitcoin | Currency Ethereum \nSymbol: BTC \nValue in USD: " + data.BTC.USD, attachment);
  })
  .catch(function(error){
    console.log(error);
  });
}

function SendEmbed(msg, data){
  const BTC_Embed = new RichEmbed()
  .setTitle("Bitcoin")
  .setColor(0x00AE86)
  .setDescription('Symbol: BTC\nPrice: $' + data.BTC.USD)
  .setThumbnail(BITCOIN_URL)
  .setTimestamp();

  const ETH_Embed = new RichEmbed()
  .setTitle("Ethereum")
  .setColor(0x00AE86)
  .setDescription('\tSymbol: ETH\nPrice: $' + data.ETH.USD)
  .setThumbnail(ETH_URL)
  .setTimestamp();

  const ETC_Embed = new RichEmbed()
  .setTitle("Ethereum CLassic")
  .setColor(0x00AE86)
  .setDescription('Symbol: ETC\nPrice: $' + data.ETC.USD)
  .setThumbnail(ETC_URL)
  .setTimestamp();

  const DOGE_Embed = new RichEmbed()
  .setTitle("DogeCoin")
  .setColor(0x00AE86)
  .setDescription('Symbol: DOGE\nPrice: $' + data.DOGE.USD)
  .setThumbnail(DOGE_URL)
  .setTimestamp();
  msg.channel.send(BTC_Embed);
  msg.channel.send(ETH_Embed);
  msg.channel.send(ETC_Embed);
  msg.channel.send(DOGE_Embed);
}

/*
function wrap(text) {

}
*/
